package Greedy;

import java.util.Arrays;

public class CoinChangeProblem {
	
	int [] arr;
	int small=0;
	int ans=1;
	int val = 0;
	public CoinChangeProblem(int[] rupees) {
		// TODO Auto-generated constructor stub
		arr = rupees;
		
	}
	public int sfind(int val) {
		small= smallest(val,1);
		return find(val,1);
		
	}
	public int find(int small, int order) {
		// TODO Auto-generated method stub
		
		
		 if(small == 0)
				return 0;
		if(val%small ==0&& order ==1) {
			
			 ans = val /small;
			return ans;
	
		}else {
			int SecSmall = smallest(small,order);
			if(SecSmall == 0)
				return 0;
			while((val>small)) {
				if(val == SecSmall + small ){
					
					return ans;
					
				}else if(val <SecSmall + small){
					
					break;
					
				}else {
					
					small = SecSmall + small;
					ans ++;
				}	
			}
			find(small,2);
		}
		
		return ans;
	}
	private int smallest(int val,int order) {
		// TODO Auto-generated method stub
		if(val <1)
			return 0;
		int small = 0;
		if(order == 1) {
		for(int i =0; i< arr.length; i++) {
			if(arr[i]>=small && arr[i]<=val) {
				
				small = arr[i];
			}
		}
		}else {
			

			for(int i =0; i< arr.length; i++) {
				if(arr[i]>=small && arr[i]<val) {
					
					small = arr[i];
				}
			}
		}
		return small;
		
	}
	

	
}
